package ren.natsuyuk1.comet.test.graphics

import org.jetbrains.skia.EncodedImageFormat
import org.jetbrains.skia.FontMgr
import org.jetbrains.skia.FontStyle
import org.jetbrains.skia.Surface
import org.jetbrains.skia.paragraph.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.TestInstance
import ren.natsuyuk1.comet.test.isCI
import java.awt.Color
import java.io.File
import java.nio.file.Files
import javax.swing.filechooser.FileSystemView

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
class TestDrawGraphics {
    @Test
    fun testDraw() {
        if (isCI()) return

        val surface = Surface.makeRasterN32Premul(500, 835)

        val fonts =
            FontCollection().setDynamicFontManager(TypefaceFontProvider()).setDefaultFontManager(FontMgr.default)

        surface.canvas.apply {
            clear(Color.WHITE.rgb)

            val testName = listOf("potatoになっていく [MASTER 28] FC (29.0x0.95)", "アイディスマイル [MASTER 27] FC (27.9x0.95)")

            val builder = ParagraphBuilder(ParagraphStyle().apply {
                alignment = Alignment.LEFT
                textStyle = TextStyle().apply {
                    color = Color.BLACK.rgb
                    fontSize = 20f
                    fontStyle = FontStyle.NORMAL.withWeight(500)
                    fontFamilies = arrayOf("Hiragino Sans")
                }
            }, fonts)

            builder.addText("测试用户 - 114514 - BEST 30\n")

            builder.popStyle().pushStyle(TextStyle().apply {
                color = Color.BLACK.rgb
                fontSize = 18f
                fontStyle = FontStyle.NORMAL.withWeight(500)
                fontFamilies = arrayOf("Hiragino Sans")
            })

            builder.addText("\n")

            repeat(15) {
                testName.forEach {
                    builder.addText(it + "\n")
                }
            }

            builder.addText("\n")

            builder.popStyle().pushStyle(TextStyle().apply {
                color = Color.BLACK.rgb
                fontSize = 13f
                fontStyle = FontStyle.NORMAL.withWeight(500)
                fontFamilies = arrayOf("Hiragino Sans")
            })

            builder.addText("Generated by Comet | 数据来源于 profile.pjsekai.moe")

            builder.build().layout(500f).paint(this, 10f, 10f)
        }

        val image = surface.makeImageSnapshot()

        val imageData = image.encodeToData(EncodedImageFormat.PNG)
        imageData?.bytes?.let {
            Files.write(
                File(FileSystemView.getFileSystemView().homeDirectory, "test.png").toPath(),
                it
            )
        }
    }
}
